#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 16 09:58:18 2020

@author: bcbirkel
"""

#!/usr/bin/env python
# coding: utf-8

# Brianna Birkel - August 2020

# This code reads in data and synthetics, does instrument correction and rotation on data, then plots a map with
# stations/event epicenter and plots RTZ components of data.

from obspy import read, read_inventory
from obspy.signal.filter import bandpass
import pandas as pd
from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt
import numpy as np
from obspy.signal.invsim import simulate_seismometer, corn_freq_2_paz
from obspy.geodetics import gps2dist_azimuth
from obspy.io.sac import sacpz
from obspy.io.sac import attach_paz
from obspy.io.gse2.paz import read_paz
import os
from obspy.core import Trace, Stream, AttribDict

#Ignore warnings due to python 2 and 3 conflict
import warnings
warnings.filterwarnings("ignore")


# %% Set parameters
#set event
event_no = 0

events = ['lahabra_2014', 'beverlyhills_2001', 'chatsworth_2007', 'chinohills_2008', 'inglewood_2009', 'elmonte_2020']
event = events[event_no]

# # plotting params
# plotsyn = False
# ymin = 0
# ymax = 100
# xmin = 0
# xmax = 80

# #set corners for map
# llcrnrlon=-119
# llcrnrlat=33.25
# urcrnrlon=-117
# urcrnrlat=34.75

# #set bandpass frequencies
# high_freq = 1/2
# low_freq = 1/10

# gain = 10
# sy_gain = 10

    
if event_no == 0:
    event_title = 'lahabra'
    event_lat = 33.9325
    event_lon = -117.9158
elif event_no == 3:
    event_title = 'chinohills'
    event_lat = 33.9465
    event_lon = -117.7667
elif event_no == 4:
    event_title = 'inglewood'
    event_lat = 33.9377
    event_lon = -118.3357
elif event_no == 2:
    event_title = 'chatsworth'
    event_lat = 34.2983
    event_lon = -118.6255
elif event_no == 1:
    event_title = 'beverlyhills'
    event_lat = 34.0541
    event_lon = -118.3929
elif event_no == 5:
    event_title = 'elmonte'
    event_lat = 34.0385
    event_lon = -118.0803
else: 
    print('unknown event file')
    
#%% event info

evla = event_lat
evlo = event_lon


# %% Set paths
#set directories

path_dir_syn = '/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/GravesSyn/CVM-S4/'
path_dir_extd = '/Users/bcbirkel/Documents/GitHub/LABasin/extractedRGsyn/'

stream_synN = read(path_dir_syn + "Syn*N.SAC")
stream_synE = read(path_dir_syn + "Syn*E.SAC")
stream_synZ = read(path_dir_syn + "Syn*Z.SAC")

stream_exN = read(path_dir_extd + "*N.SAC")
stream_exE = read(path_dir_extd + "*E.SAC")
stream_exZ = read(path_dir_extd + "*Z.SAC")

ind = 0
times = np.linspace(0, 400, num=8000)
for tr in stream_synZ:
    for etr in stream_exZ:
        if tr.stats.station == etr.stats.station:
            figN = plt.figure(ind, figsize=[8,5])
            aN = figN.add_subplot(1, 1, 1)
            aN.plot(times, tr)
            aN.plot(times, etr)  
            aN.set_xlabel("Time (s)")
            aN.set_title("Dist between is " + etr.stats.dist)
            ind += 1
            
            
            
            
