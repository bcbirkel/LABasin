#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 11 15:47:58 2020

@author: bcbirkel
"""

from obspy import read, read_inventory
from obspy.signal.filter import bandpass
import pandas as pd
from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt
import numpy as np
from obspy.signal.invsim import simulate_seismometer, corn_freq_2_paz
from obspy.geodetics import gps2dist_azimuth
from obspy.io.sac import sacpz
from obspy.io.sac import attach_paz
from obspy.io.gse2.paz import read_paz
import os
from obspy.core import Trace, Stream, AttribDict
from obspy.signal.rotate import rotate_ne_rt

#Ignore warnings due to python 2 and 3 conflict
import warnings
warnings.filterwarnings("ignore")

syn = False


# %% Set parameters
#set event
for i in range(1):
    event_no = 5
    events = ['lahabra_2014', 'beverlyhills_2001', 'chatsworth_2007', 'chinohills_2008', 'inglewood_2009', 'elmonte_2020']
    event = events[event_no]
    
    
    os.chdir('/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/CESMD/SAC/')
    if syn == True:
        os.chdir('/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/GravesSyn/')
    # %% Set paths
    
    path_dir_CESMD = '/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/CESMD/SAC/'
    if syn == True:
        path_dir_syn = '/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/GravesSyn/'
    
    
    if event_no == 0:
        event_title = 'lahabra'
        event_lat = 33.9325
        event_lon = -117.9158
    elif event_no == 3:
        event_title = 'chinohills'
        event_lat = 33.9465
        event_lon = -117.7667
    elif event_no == 4:
        event_title = 'inglewood'
        event_lat = 33.9377
        event_lon = -118.3357
    elif event_no == 2:
        event_title = 'chatsworth'
        event_lat = 34.2983
        event_lon = -118.6255
    elif event_no == 1:
        event_title = 'beverlyhills'
        event_lat = 34.0541
        event_lon = -118.3929
    elif event_no == 5:
        event_title = 'elmonte'
        event_lat = 34.0385
        event_lon = -118.0803
    else: 
        print('unknown event file')
    
    #read in files
    # if event_no == 0 or :
    stream_cesmdN = read(path_dir_CESMD + "vel/*N_vel.SAC")
    stream_cesmdE = read(path_dir_CESMD + "vel/*E_vel.SAC")
    # else: 
    #     stream_cesmdN = read(path_dir_CESMD + "*N_vel.SAC")
    #     stream_cesmdE = read(path_dir_CESMD + "*E_vel.SAC")
    #stream_synS = read(path_dir_syn + "CVM-S4/*.SAC")
    if syn == True:
        stream_synSN = read(path_dir_syn + "CVM-S4/*N.SAC")
        stream_synSE = read(path_dir_syn + "CVM-S4/*E.SAC")    
        stream_synHN = read(path_dir_syn + "CVM-H/*N.SAC")
        stream_synHE = read(path_dir_syn + "CVM-H/*E.SAC")
    
    # station lists
    
    # initialize stn list
    cesmd_stnsN = []
    cesmd_stnsE = []
    synSN_stns = []
    synSE_stns = []
    synHN_stns = []
    synHE_stns = []
    
    # populate lists
    for tr in stream_cesmdN:
        cesmd_stnsN.append(tr.stats.sac.kstnm)
        tr.stats.sac.evlo = event_lon
        tr.stats.sac.evla = event_lat
        tr.stats.channel = "BHN"
        
    for tr in stream_cesmdE:
        cesmd_stnsE.append(tr.stats.sac.kstnm)
        tr.stats.sac.evlo = event_lon
        tr.stats.sac.evla = event_lat
        tr.stats.channel = "BHE"
    
    if syn == True:    
        for tr in stream_synSN:
            synSN_stns.append(tr.stats.station)
            tr.stats.sac.evlo = event_lon
            tr.stats.sac.evla = event_lat
            tr.stats.channel = "BHN"
            
        for tr in stream_synSE:
            synSE_stns.append(tr.stats.station)
            tr.stats.sac.evlo = event_lon
            tr.stats.sac.evla = event_lat
            tr.stats.channel = "BHE"
    
        for tr in stream_synHN:
            synHN_stns.append(tr.stats.station)
            tr.stats.sac.evlo = event_lon
            tr.stats.sac.evla = event_lat
            tr.stats.channel = "BHN"
            
        for tr in stream_synHE:
            synHE_stns.append(tr.stats.station)
            tr.stats.sac.evlo = event_lon
            tr.stats.sac.evla = event_lat
            tr.stats.channel = "BHE"
        
        
    # find intersection of stations
    
    #cesmd_stns = cesmd_stnsE.intersection(cesmd_stnsN)
    cesmd_st = set(cesmd_stnsN)

    if syn == True:    
        synSN_st = synSN_stns
        synSE_st = synSE_stns
        synS_st = synSE_st + synSE_st
        synS_st = set(synS_st)
        
        synH_stns = synHE_stns + synHN_stns
        synH_st = set(synH_stns) 
    
    stream_cesmd = stream_cesmdN + stream_cesmdE
    if syn == True:
        stream_synS = stream_synSN + stream_synSE
        stream_synH = stream_synHN + stream_synHE
 
    
    os.chdir('/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/CESMD/SAC/vel/')
    for st in cesmd_st:
        count = 0
        for tr in stream_cesmd:
            if st == tr.stats.sac.kstnm:
                dist_az = gps2dist_azimuth(tr.stats.sac.evla, tr.stats.sac.evlo, tr.stats.sac.stla, tr.stats.sac.stlo)
                dist = dist_az[0]
                az = dist_az[1]
                baz = dist_az[2]
                print("check")
                if tr.stats.channel == "BHN":
                    tn = tr
                    trad = tn
                    trad.stats.channel = "BHR"
                    trad.stats.sac.kcmpnm = "BHR"
                    count += 1
                if tr.stats.channel == "BHE":
                    te = tr
                    ttrans = te
                    ttrans.stats.channel = "BHT"
                    ttrans.stats.sac.kcmpnm = "BHT"
                    count += 1
                if count == 2:
                    print(trad.data)
                    trad.data, ttrans.data = rotate_ne_rt(tn.data,te.data,baz)
                    print(trad.data)
                    trad.write(tr.stats.network + "_" + tr.stats.station + "_BHR_vel.SAC", format="SAC")
                    ttrans.write(tr.stats.network + "_" + tr.stats.station + "_BHT_vel.SAC", format="SAC")
                    print("rotated cesmd!")
    
    
    if syn == True:
        os.chdir('/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/GravesSyn/CVM-S4/')
        for st in synS_st:
            count = 0
            for tr in stream_synS:
                if st == tr.stats.station:
                    dist_az = gps2dist_azimuth(tr.stats.sac.evla, tr.stats.sac.evlo, tr.stats.sac.stla, tr.stats.sac.stlo)
                    dist = dist_az[0]
                    az = dist_az[1]
                    baz = dist_az[2]
                    print("check")
                    if tr.stats.channel == "BHN":
                        tn = tr
                        trad = tn
                        trad.stats.channel = "BHR"
                        trad.stats.sac.kcmpnm = "BHR"
                        count += 1
                    if tr.stats.channel == "BHE":
                        te = tr
                        ttrans = te
                        ttrans.stats.channel = "BHT"
                        ttrans.stats.sac.kcmpnm = "BHT"
                        count += 1
                    if count == 2:
                        trad.data, ttrans.data = rotate_ne_rt(tn.data,te.data,baz)
                        trad.write("Syn_" + event_title + "_" + tr.stats.station + "_R.SAC", format="SAC")
                        ttrans.write("Syn_" + event_title + "_" + tr.stats.station + "_T.SAC", format="SAC")
                        print("rotated synS!")  
    
        os.chdir('/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/GravesSyn/CVM-H/')
        for st in synH_st:
            count = 0
            for tr in stream_synH:
                if st == tr.stats.station:
                    dist_az = gps2dist_azimuth(tr.stats.sac.evla, tr.stats.sac.evlo, tr.stats.sac.stla, tr.stats.sac.stlo)
                    dist = dist_az[0]
                    az = dist_az[1]
                    baz = dist_az[2]
                    print("check")
                    if tr.stats.channel == "BHN":
                        tn = tr
                        trad = tn
                        trad.stats.channel = "BHR"
                        trad.stats.sac.kcmpnm = "BHR"
                        count += 1
                    if tr.stats.channel == "BHE":
                        te = tr
                        ttrans = te
                        ttrans.stats.channel = "BHT"
                        ttrans.stats.sac.kcmpnm = "BHT"
                        count += 1
                    if count == 2:
                        trad.data, ttrans.data = rotate_ne_rt(tn.data,te.data,baz)
                        trad.write("Syn_" + event_title + "_" + tr.stats.station + "_R.SAC", format="SAC")
                        ttrans.write("Syn_" + event_title + "_" + tr.stats.station + "_T.SAC", format="SAC")
                        print("rotated synH!") 
    
    # #for tr in stream_synS:
    #     #print(tr.stats.sac.stla)
    # #for tr in stream_synH:
    #     #print(tr.stats.sac.stla)