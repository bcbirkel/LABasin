#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 11 15:47:58 2020

@author: bcbirkel
"""

from obspy import read, read_inventory
from obspy.signal.filter import bandpass
import pandas as pd
from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt
import numpy as np
from obspy.signal.invsim import simulate_seismometer, corn_freq_2_paz
from obspy.geodetics import gps2dist_azimuth
from obspy.io.sac import sacpz
from obspy.io.sac import attach_paz
from obspy.io.gse2.paz import read_paz
import os
from obspy.core import Trace, Stream, AttribDict

#Ignore warnings due to python 2 and 3 conflict
import warnings
warnings.filterwarnings("ignore")


# %% Set parameters
#set event
events = ['lahabra_2014', 'beverlyhills_2001', 'chatsworth_2007', 'chinohills_2008', 'inglewood_2009']
event = events[0]

# %% Set paths

path_dir_CESMD = '/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/CESMD/SAC/vel/'
path_dir_syn = '/Users/bcbirkel/Documents/GitHub/LABasin/CompiledEvents/' + event + '/GravesSyn/'

#read in files

stream_cesmd = read(path_dir_CESMD + "*vel.SAC")
stream_synS = read(path_dir_syn + "CVM-S4/*.SAC")
stream_synH = read(path_dir_syn + "CVM-H/*.SAC")

# station lists

# initialize stn list
cesmd_stns = []
synS_stns = []
synH_stns = []

# populate lists
for tr in stream_cesmd:
    cesmd_stns.append(tr.stats.sac.kstnm)
    
for tr in stream_synS:
    synS_stns.append(tr.stats.station)
    
for tr in stream_synH:
    synH_stns.append(tr.stats.station)
    
# find intersection of stations
iris_st = set(data_stns)
cesmd_st = set(cesmd_stns )
data_st = iris_st.union(cesmd_st)

syn_st = set(syn_stns)
stn_list = data_st.intersection(syn_st) 

for tr in stream_cesmd:
    dist_az = gps2dist_azimuth(tr.stats.sac.evla, tr.stats.sac.evlo, tr.stats.sac.stla, tr.stats.sac.stlo)
    dist = dist_az[0]
    az = dist_az[1]
    baz = dist_az[2]
    rotate_ne_rt(tn.data,te.data,baz)

# for stn in cesmd_st:
#     st = Stream()
#     for tr in stream_cesmd:
#         [dist, az, baz] = gps2dist_azimuth(tr.stats.sac.evla,tr.stats.sac.evlo,tr.stats.sac.stla,tr.stats.sac.stlo)
#         tr.stats.dist = dist
#         tr.stats.az = az
#         tr.stats.baz = baz
#         if stn == tr.stats.station:
#             st += tr
#             if len(st) == 3:        
#                 st.rotate('NE->RT', back_azimuth=baz)
                #tr.write("processed_" + tr.stats.network + '.' + tr.stats.station + '.' + tr.stats.channel + ".SAC", format="SAC") 


for tr in stream_synS:
    print(tr.stats.sac.stla)
for tr in stream_synH:
    print(tr.stats.sac.stla)
    
    
# for ii in range(len(st_name)):
#     st = st_name[ii]
#     for tn in stream_N:
#         for te in stream_E:
#             if tn.stats.station == st and te.stats.station == st:
#                 baz = st_baz[ii]
#                 rotate_ne_rt(tn.data,te.data,baz)
#                 tn.write(tr.id + "R.SAC", format="SAC")
#                 te.write(tr.id + "T.SAC", format="SAC")